#!/bin/bash
#
# qubes-terminal-hotkeys installer
#
# Copyright (C) 2020  David Hobach  GPLv3
# version: 0.3
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
#

#name & directory of this script (hopefully...)
SCRIPT_NAME="${BASH_SOURCE[0]##*/}"
SCRIPT_DIR="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"

#where to install binaries/symbolic links to
INSTALL_BIN="/usr/bin"

function usage {
echo "Usage: $SCRIPT_NAME [install|uninstall|reinstall]

Installer for qubes-terminal-hotkeys.

Make sure you copied all qubes-terminal-hotkeys file to their installation directory before executing an install."
exit 1
}

function errorOut {
>&2 echo "ERROR: $1"
>&2 echo "Aborting..."
exit 1
}

#get config
CONF="$SCRIPT_DIR/qubes-terminal-hotkeys.conf"
source "$CONF" || errorOut "Failed to read the configuration $CONF."

#qubes-terminal-hotkeys script
QHK="$SCRIPT_DIR/qubes-terminal-hotkeys"
[ -f "$QHK" ] || errorOut "Didn't find the main script at $QHK."

#installR
function installR {
local hotkey=

for hotkey in "${!HOTKEYS[@]}" ; do
	local toInstall="$INSTALL_BIN/$hotkey"
	if [ -e "$toInstall" ] ; then
		echo "$toInstall appears to exist. Skipping."
	else
		echo "Installing to $toInstall ..."
		ln -s "$QHK" "$toInstall" || errorOut "Failed to create a symbolic link from $toInstall to $QHK."
	fi
done
return 0
}

#uninstallR
function uninstallR {
local bin=
local target=

for bin in "$INSTALL_BIN/"* ; do
	if [ -L "$bin" ] ; then
		target="$(readlink -f "$bin")" || errorOut "Failed to execute readlink on $bin."
		if [[ "$target" == "$QHK" ]] ; then
			echo "Removing $bin ..."
			rm -f "$bin" || errorOut "Failed to remove $bin."
		fi
	fi
done
return 0
}

function reinstallR {
uninstallR || errorOut "Failed to uninstall."
installR
}

function main {
[ $# -ne 1 ] && usage

[ "$(whoami)" != "root" ] && errorOut "This script must be run as root."

#parse commands
local cmd="$1"
case "$cmd" in
	install)
	installR
	;;

	uninstall)
	uninstallR
	;;
	
	reinstall)
	reinstallR
	;;

	*)
	usage
	;;
esac

echo "All done."
exit 0
}

main "$@"
